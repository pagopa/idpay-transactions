asyncapi: 2.0.0
info:
  title: Transactions Service
  version: 1.0.0
  description: >-
    Its purpose is to notify allowed citizen notification and cancellation of an initiative
tags:
  - name: "deleteInitiative"
    description: "Delete the initiative"
  - name: "notifyTransactionError"
    description: "notify transaction error"
  - name: "notifyTransactionCommandsError"
    description: "notify transaction commands error"
  - name: "saveTransaction"
    description: "save transaction history"

channels:
  transactions-delete-initiative-consumer:
    subscribe:
      message:
        contentType: application/json
        payload:
          $ref: "https://raw.githubusercontent.com/pagopa/idpay-portal-welfare-backend-initiative/{{app.pdv.base-url}}/specs/asyncapi.yml#/components/schemas/QueueCommandOperationDTO"
      bindings:
        kafka:
          topic: idpay-commands
      tags:
        - name: "deleteInitiative"
  transactions-notify-transaction-error:
    publish:
      message:
        $ref: '#/components/messages/TransactionNotifyError'
      bindings:
        kafka:
          topic: idpay-errors
      tags:
        - name: "notifyTransactionError"
  transactions-notify-transaction-commands-error:
    publish:
      message:
        $ref: '#/components/messages/TransactionCommandsNotifyError'
      bindings:
        kafka:
          topic: idpay-errors
      tags:
        - name: "notifyTransactionCommandsError"
  transactions-save-reward-trx:
    subscribe:
      message:
        $ref: '#/components/messages/SaveTransaction'
      bindings:
        kafka:
          topic: idpay-transaction
      tags:
        - name: "saveTransaction"
components:
  messages:
    QueueCommandOperationDTO:
      contentType: application/json
      description: >-
        Event consumed from application when a delete initiative command has published
      summary: Delete documents of the initiative
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-portal-welfare-backend-initiative/IDP-2524-censimento-async-idpay-portal-welfare-backend-initiative/specs/asyncapi.yml#/components/schemas/QueueCommandOperationDTO"
    TransactionCommandsNotifyError:
      contentType: application/json
      description: >-
        An error occurred during notify transaction commands
      summary: Informs of notify transaction commands error
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "https://raw.githubusercontent.com/pagopa/idpay-portal-welfare-backend-initiative/IDP-2524-censimento-async-idpay-portal-welfare-backend-initiative/specs/asyncapi.yml#/components/schemas/QueueCommandOperationDTO"
    TransactionNotifyError:
      contentType: application/json
      description: >-
        An error occurred during notify transaction
      summary: Informs of notify transaction error
      headers:
        $ref: "#/components/schemas/ErrorQueueHeader"
      payload:
        $ref: "#/components/schemas/RewardTransactionDTO"
    SaveTransaction:
      contentType: application/json
      description: >-
        Save RewardTransactionDTO information
      summary: Save transaction history
      payload:
        $ref: "#/components/schemas/RewardTransactionDTO"
  schemas:
    ErrorQueueHeader:
      type: object
      required:
        - srcType
        - srcServer
        - srcTopic
        - description
        - retryable
        - stacktrace
        - rootCauseClass
        - rootCauseMessage
      properties:
        srcType:
          type: string
          description: The type of the source of the error message.
          example: "kafka"
        srcServer:
          type: string
          description: The source server of the error message.
          example: "kafka-broker-1.example.com:9092"
        srcTopic:
          type: string
          description: The Kafka topic of the source of the error message.
          example: "idpay-commands"
        description:
          type: string
          description: Description of the error.
          example: "[TRANSACTIONS_COMMANDS] An error occurred evaluating commands"
        retryable:
          type: boolean
          description: Indicates whether the error is retryable or not.
        stacktrace:
          type: string
          description: The stack trace of the error.
          example: "TransactionsException -> Error occurred during handling of transactions service"
        rootCauseClass:
          type: string
          description: Cause of the error.
          example: "com.example.Exception"
        rootCauseMessage:
          type: string
          description: Message of the error.
          example: "Unexpected JSON"
        kafka_messageKey:
          type: string
          description: The header containing the record key from the received message.
          example: 0
        applicationName:
          type: string
          description: The name of the application that generated the error.
          example: "idpay-transactions"
        group:
          type: string
          description: The Kafka group to which the error message belongs.
          example: "idpay-commands-transactions-consumer-group"
    RewardTransactionDTO:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the transaction
          example: "f2ff6430-1c33-48c3-8689-5d912bdc65c5_1716477812829"
        idTrxAcquirer:
          type: string
          description: Identifier of the transaction acquirer
          example: "651713d5-d567-4993-882a-7e4e3e9e8f4c"
        acquirerCode:
          type: string
          description: Code of the acquirer
          example: "36081"
        trxDate:
          type: string
          format: date-time
          description: Date and time of the transaction
          example: "2023-05-30T12:34:56Z"
        hpan:
          type: string
          description: Hash of the Primary Account Number
          example: 5c6bda1b1f5f6238dcba70f9f4b5a77671eb2b1563b0ca6d15d14c649a9b7ce0
        operationType:
          type: string
          enum:
            - "00"
            - "01"
          description: Type of the operation
          example: "00"
        circuitType:
          type: string
          description: Type of the circuit
          example: "VISA"
        idTrxIssuer:
          type: string
          description: Identifier of the transaction issuer
          example: "APIMREQUESTID"
        correlationId:
          type: string
          description: Correlation identifier for tracing the transaction
          example: "f2ff6430-1c33-48c3-8689-5d912bdc65c5_1716477812829"
        amountCents:
          type: integer
          format: int64
          description: Amount of the transaction in cents
          example: 1000
        amountCurrency:
          type: string
          description: Currency of the transaction amount
          example: "EUR"
        mcc:
          type: string
          description: Merchant Category Code
          example: "5812"
        acquirerId:
          type: string
          description: Identifier of the acquirer
          example: "PAGOPA"
        merchantId:
          type: string
          description: Identifier of the merchant
          example: "3a602b17-ac1c-3029-9e78-0a4bbb8693d4"
        terminalId:
          type: string
          description: Identifier of the merchant's terminal
          example: "64874412"
        bin:
          type: string
          description: Bank Identification Number
          example: "12345678"
        senderCode:
          type: string
          description: ABI code of the sender
          example: "03096"
        fiscalCode:
          type: string
          description: Fiscal code of the user
          example: "RSSMRA85M01H501Z"
        vat:
          type: string
          description: VAT number of the user
          example: "IT12345678901"
        posType:
          type: string
          description: Type of the POS
          example: "Physical"
        par:
          type: string
          description: Payment Account Reference
          example: "PAYREF987654"
        status:
          type: string
          enum:
            - AUTHORIZED
            - REWARDED
            - REJECTED
          description: Status of the transaction
          example: "AUTHORIZED"
        rejectionReasons:
          type: array
          items:
            type: string
            enum:
              - DUPLICATE_CORRELATION_ID
              - NO_ACTIVE_INITIATIVES
              - INVALID_OPERATION_TYPE
              - INVALID_AMOUNT
              - INVALID_REFUND
              - REFUND_NOT_MATCH
              - INITIATIVE_NOT_FOUND
              - BUDGET_EXHAUSTED
              - RULE_ENGINE_NOT_READY
          description: Reasons for rejecting the transaction when status is REJECTED
          example: ["BUDGET_EXHAUSTED", "NO_ACTIVE_INITIATIVES"]
        initiativeRejectionReasons:
          type: object
          description: Reasons for rejecting the transaction by initiative
          additionalProperties:
            type: array
            items:
              type: string
          example:
            "66580fde4f47f940241a9f25": ["BUDGET_EXHAUSTED", "NO_ACTIVE_INITIATIVES"]
        initiatives:
          type: array
          items:
            type: string
          description: List of initiatives
          example: ["66580fde4f47f940241a9f25"]
        rewards:
          type: object
          description: Rewards associated with the transaction
          additionalProperties:
            $ref: '#/components/schemas/Reward'
          example:
            "66580fde4f47f940241a9f25":
              initiativeId: "66580fde4f47f940241a9f25"
              organizationId: "c326cac6-a38c-416c-a3c3-f6a407b77950"
              providedRewardCents: 300
              accruedRewardCents: 250
              capped: false
              dailyCapped: false
              monthlyCapped: false
              yearlyCapped: false
              weeklyCapped: false
              refund: false
              completeRefund: false
              counters:
                exhaustedBudget: false
                initiativeBudgetCents: 1000000
                trxNumber: 10
                totalRewardCents: 5000
                totalAmountCents: 200000
        userId:
          type: string
          description: Identifier of the user
          example: "9613d825-1db0-4009-bb9b-62e2aea75416"
        maskedPan:
          type: string
          description: Masked Primary Account Number
          example: "1234********5678"
        brandLogo:
          type: string
          description: Logo of the card brand
          example: "logo.png"
        operationTypeTranscoded:
          type: string
          enum:
            - CHARGE
            - REFUND
          description: Transcoded operation type
          example: "CHARGE"
        effectiveAmountCents:
          type: integer
          format: int64
          description: Effective amount in cents
          example: 950
        trxChargeDate:
          type: string
          format: date-time
          description: Date and time when the transaction was charged
          example: "2023-05-30T12:45:00Z"
        refundInfo:
          $ref: '#/components/schemas/RefundInfo'
        elaborationDateTime:
          type: string
          format: date-time
          description: Date and time of the transaction elaboration
          example: "2023-05-30T13:00:00Z"
        channel:
          type: string
          enum:
            - RTD
            - QRCODE
            - IDPAYCODE
            - BARCODE
          description: Channel through which the transaction was processed
          example: "BARCODE"
    RefundInfo:
      type: object
      description: Information about the refund
      properties:
        previousTrxs:
          type: array
          description: List of previous transactions
          items:
            $ref: '#/components/schemas/TransactionProcessed'
        previousRewards:
          type: object
          description: Previous rewards information
          additionalProperties:
            $ref: '#/components/schemas/PreviousReward'
          example:
            "66580fde4f47f940241a9f25":
              "initiativeId": 66580fde4f47f940241a9f25,
              "organizationId": c326cac6-a38c-416c-a3c3-f6a407b77950,
              "accruedRewardCents": 500,
    PreviousReward:
      type: object
      description: Information about the previous reward
      properties:
        initiativeId:
          type: string
          description: Identifier of the initiative
          example: "66580fde4f47f940241a9f25"
        organizationId:
          type: string
          description: Identifier of the organization
          example: "c326cac6-a38c-416c-a3c3-f6a407b77950"
        accruedRewardCents:
          type: integer
          format: int64
          description: Amount of reward accrued in cents
          example: 500
    TransactionProcessed:
      type: object
      description: Information about the processed transaction
      properties:
        id:
          type: string
          description: Unique identifier for the transaction
          example: "f2ff6430-1c33-48c3-8689-5d912bdc65c5_1716477812829"
        idTrxAcquirer:
          type: string
          description: Identifier of the transaction acquirer
          example: "651713d5-d567-4993-882a-7e4e3e9e8f4c"
        acquirerCode:
          type: string
          description: Code of the acquirer
          example: "36081"
        trxDate:
          type: string
          format: date-time
          description: Date and time of the transaction
          example: "2023-05-30T12:34:56Z"
        operationType:
          type: string
          enum:
            - "00"
            - "01"
          description: Type of the operation
          example: "00"
        acquirerId:
          type: string
          description: Identifier of the acquirer
          example: "PAGOPA"
        userId:
          type: string
          description: Identifier of the user
          example: "9613d825-1db0-4009-bb9b-62e2aea75416"
        correlationId:
          type: string
          description: Correlation identifier for tracing the transaction
          example: "f2ff6430-1c33-48c3-8689-5d912bdc65c5_1716477812829"
        amountCents:
          type: integer
          format: int64
          description: Amount of the transaction in cents
          example: 2000
        rewards:
          type: object
          description: Rewards associated with the transaction
          additionalProperties:
            $ref: '#/components/schemas/Reward'
          example:
            "66580fde4f47f940241a9f25":
              initiativeId: "66580fde4f47f940241a9f25"
              organizationId: "c326cac6-a38c-416c-a3c3-f6a407b77950"
              providedRewardCents: 300
              accruedRewardCents: 250
              capped: false
              dailyCapped: false
              monthlyCapped: false
              yearlyCapped: false
              weeklyCapped: false
              refund: false
              completeRefund: false
              counters:
                exhaustedBudget: false
                initiativeBudgetCents: 1000000
                trxNumber: 10
                totalRewardCents: 2000
                totalAmountCents: 200000
        effectiveAmountCents:
          type: integer
          format: int64
          description: Effective amount in cents
          example: 1900
        trxChargeDate:
          type: string
          format: date-time
          description: Date and time when the transaction was charged
          example: "2023-05-30T12:45:00Z"
        operationTypeTranscoded:
          type: string
          enum:
            - CHARGE
            - REFUND
          description: Transcoded operation type
          example: "CHARGE"
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the processed transaction
          example: "2023-05-30T14:00:00Z"
    Reward:
      type: object
      description: Information about the reward
      properties:
        initiativeId:
          type: string
          description: Identifier of the initiative
          example: "66580fde4f47f940241a9f25"
        organizationId:
          type: string
          description: Identifier of the organization
          example: "c326cac6-a38c-416c-a3c3-f6a407b77950"
        providedRewardCents:
          type: integer
          format: int64
          description: Reward calculated by the rule engine in cents
          example: 300
        accruedRewardCents:
          type: integer
          format: int64
          description: Effective reward after CAP evaluation in cents
          example: 250
        capped:
          type: boolean
          description: True if the reward has been capped due to budget threshold
          example: false
        dailyCapped:
          type: boolean
          description: True if the reward has been capped due to daily threshold
          example: false
        monthlyCapped:
          type: boolean
          description: True if the reward has been capped due to monthly threshold
          example: false
        yearlyCapped:
          type: boolean
          description: True if the reward has been capped due to yearly threshold
          example: false
        weeklyCapped:
          type: boolean
          description: True if the reward has been capped due to weekly threshold
          example: false
        refund:
          type: boolean
          description: True if it's a refunding reward
          example: false
        completeRefund:
          type: boolean
          description: True if it's a complete refunding reward
          example: false
        counters:
          $ref: '#/components/schemas/RewardCounters'
    RewardCounters:
      type: object
      description: Counters for the reward
      properties:
        exhaustedBudget:
          type: boolean
          description: True if the budget is exhausted
          example: false
        initiativeBudgetCents:
          type: integer
          format: int64
          description: Budget of the initiative in cents
          example: 1000000
        trxNumber:
          type: integer
          format: int64
          description: Number of transactions
          example: 10
        totalRewardCents:
          type: integer
          format: int64
          description: Total reward in cents
          example: 5000
        totalAmountCents:
          type: integer
          format: int64
          description: Total amount in cents
          example: 200000